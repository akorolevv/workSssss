package prac10;

// Даны числа a и b. Определите, сколько существует последовательностей
// из a нулей и b единиц, в которых никакие два нуля не стоят рядом.

public class Bez_dvuh_nolei
{
        public static void main(String[] args)
        {
            int a = 1; // Количество нулей
            int b = 3; // Количество единиц

            long result = countSequences(a, b); // Переменная типа long, поскольку значение может быть очень большим
            System.out.println("Количество последовательностей: " + result);
        }

        public static long countSequences(int a, int b)
        {
            // Базовый случай 1
            // Нет нулей, но есть единицы, значит последовательность только одна (Пример: 3 единицы --> 111)
            if (a == 0)
            {
                return 1;
            }

            // Базовый случай 2
            // Нет единиц, но есть нули и их не более 2, значит последовательность только одна (Пример: один ноль --> 0)

            else if (b == 0 && a < 2)
            {
                return 1;
            }

            // Базовый случай 3
            // Один ноль и b единиц. Тогда последовательностей будет b + 1 (Пример: один ноль и три единицы --> 0111, 1011, 1101, 1110)
            // Пример: один ноль и четрые единицы --> 01111, 10111, 11011, 11101, 11110

            else if (a == 1)
            {
                return b + 1;
            }

            // Базовый случай 4
            // Число нулей 2 и более и число единиц равно 0. В таком случае, последовательность сделать невозможно.
            else if (a > 1 && b == 0)
            {

                return 0;
            }

            // Рекурсивный вызов. Мы уменьшаем кол-во единиц/нулей и складываем результат.
            // Т.е. если a = 2 и b = 3, мы выполняем функцию от этих значений.
            // countSequences(a - 1, b) --> a = 1, b = 3, считаем функцию для этих значений
            // countSequences(a, b - 1) --> a = 2, b = 2, считаем функцию для этих значений
            // Складываем результаты, поскольку последовательности не совпадают и повторяем цикл
            else
            {
                return countSequences(a - 1, b) + countSequences(a, b - 1);
            }
        }
}

